---
title: Bayesian Way of PEST
date: 2018-03-21T00:18:02+00:00
author: Shiva Shrestha
layout: post
categories:
  - Random
---

[About BAYES](https://en.wikipedia.org/wiki/Bayes%27_theorem)

#### Four simple rules: 

<a href="/_post/index.html"> </a>

* Start with the prior
* Be Aware of the likelihood
* Learn the conjugates
* Get you posterior

<!--more-->
<canvas id="game" style="opacity:0.3; position:absolute; top:0; left:0;">

        Your browser does not support html5 canvas
</canvas>
<script type="text/javascript">
var Cell=function(a,b){var c=this;return c.isAlive=!1,c.x=a,c.y=b,c.neighbors=null,c.countNeighbors=function(){return c.neighbors.filter(function(a){return a.isAlive}).length},c.lifetime=0,c.lifetimePlusPlus=function(){c.lifetime<2&&c.lifetime++},c},Grid=function(a,b){for(var c=this,d=new Array(a*b),f=0;f<a;f++)for(var g=0;g<b;g++)!function(){d[f+g*a]=new Cell(f,g)}();return d.forEach(function(a){a.neighbors=d.filter(function(b){var c=Math.abs(b.x-a.x),d=Math.abs(b.y-a.y);return 1===c&&1===d||1===c&&0===d||0===c&&1===d})}),c.filter=function(a){return d.filter(a)},c.updateLiving=function(){var a=d.filter(function(a){return a.isAlive&&a.countNeighbors()>3}),b=d.filter(function(a){return a.isAlive&&a.countNeighbors()<2}),c=d.filter(function(a){return!a.isAlive&&3===a.countNeighbors()}),e=d.filter(function(a){return a.isAlive&&(2===a.countNeighbors()||3===a.countNeighbors())});a.concat(b).forEach(function(a){a.lifetime=0,a.isAlive=!1}),c.forEach(function(a){a.isAlive=!0}),e.forEach(function(a){a.lifetimePlusPlus(),a.isAlive=!0})},c.getCell=function(b,c){return d[b+c*a]},c},App=function(a,b,c){var d="#009688",e=["#80CBC4","#B2DFDB","#E0F2F1"],f=this;f.canvas=document.getElementById(a),f.ctx=f.canvas.getContext("2d"),viewWidth=f.canvas.width=window.innerWidth,viewHeight=f.canvas.height=window.innerHeight,b=b||20,c=c||20;var g=f.canvas.width/b,h=g,i=new Grid(b,c),j=[[1,5],[1,6],[2,5],[2,6],[11,5],[11,6],[11,7],[12,4],[12,8],[13,3],[13,9],[14,3],[14,9],[15,6],[16,4],[16,8],[17,5],[17,6],[17,7],[18,6],[21,3],[21,4],[21,5],[22,3],[22,4],[22,5],[23,2],[23,6],[25,1],[25,2],[25,6],[25,7],[35,3],[35,4],[36,3],[36,4]],k=[[50,40],[50,41],[51,40],[51,41]];f.dummyInit=function(a){a.forEach(function(a){i.getCell(a[0],a[1]).isAlive=!0})};var l=!1;f.mouseclicks=[];var m=function(a){var b=a.pageX-f.canvas.offsetLeft,c=a.pageY-f.canvas.offsetTop,d=Math.floor(b/g),e=Math.floor(c/h);f.mouseclicks.push([d,e]),i.getCell(d,e).isAlive=!0};return window.onresize=function(a){viewWidth=f.canvas.width=window.innerWidth,viewHeight=f.canvas.height=window.innerHeight},f.canvas.addEventListener("mousedown",function(a){l=!0,m(a),f.canvas.addEventListener("mousemove",m)}),f.canvas.addEventListener("mouseup",function(a){l=!1,f.canvas.removeEventListener("mousemove",m)}),f.start=function(){f.dummyInit(j),f.dummyInit(k),setInterval(function(){f.update(),f.draw()},20),setInterval(function(){f.dummyInit(k)},1e3)},f.update=function(){i.updateLiving()},f.draw=function(){f.ctx.fillStyle="white",f.ctx.fillRect(0,0,f.canvas.width,f.canvas.height),i.filter(function(a){return a.isAlive}).forEach(function(a){var b=2;f.ctx.fillStyle=d,f.ctx.fillRect(a.x*g,a.y*h,g,h),f.ctx.fillStyle=e[a.lifetime],f.ctx.fillRect(a.x*g+b,a.y*h+b,g-2*b,h-2*b)})},f},app=new App("game",100,50);app.start();
</script>


<!DOCTYPE html>
<html>
<head>
    <title>Simple Leaflet Map</title>
    <meta charset="utf-8" />
    <link 
        rel="stylesheet" 
        href="http://cdn.leafletjs.com/leaflet-0.7/leaflet.css"
    />
</head>
<body>

    <div id="map" style="width: 600px; height: 400px"></div>

    <script
        src="http://cdn.leafletjs.com/leaflet-0.7/leaflet.js">

    </script>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>

    <script>
    	var sheetids=[
    	['id1',25,84.1],['id2',25,84.2],['id3',25.1,84.1],['id4',25.1,84.2],['id5',25.2,84.1],['id6',25.2,84.2],['id7',25.3,84.1],['id8',25.3,84.2]
    	];
    function show_map(sheetids){
    	//alert("33");
    	var planes = sheetids;

        var map = L.map('map').setView([planes[0][1],planes[0][2]], 8);
        mapLink = 
            '<a href="http://openstreetmap.org">OpenStreetMap</a>';
        L.tileLayer(
            'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; ' + mapLink + ' Contributors',
            maxZoom: 18,
            }).addTo(map);

		for (var i = 0; i < planes.length; i++) {
			marker = new L.marker([planes[i][1],planes[i][2]])
				//.bindPopup(planes[i][0])
				.bindPopup(planes[i][1].toString()+" , "+planes[i][2].toString())
				.addTo(map).on('click', onClick);
		}

    }
    function onClick(e) {
    	var ss=this.getLatLng();
    	//var file_name="";
    	var lat1=ss['lat'];
    	var lon1=ss['lng'];
    	//alert(lat1+" "+lon1);
    	var filename=get_filename(lat1,lon1);
    	alert("file downloding");
    	download_the_file(filename);
	}
	function download_the_file(name){
    	var name="./"+name+".xlsx";
		setTimeout("window.location.assign('" + name + "');", 1000);

    }
    function toRad(x) {
   		return x * Math.PI / 180;
	}
	function indexOfMax(arr) {
    if (arr.length === 0) {
        return -1;
    }

    var min = arr[0];
    var minIndex = 0;

    for (var i = 1; i < arr.length; i++) {
        if (arr[i] < min) {
            minIndex = i;
            min = arr[i];
        }
    }

    return minIndex;
}
    function get_filename(lat1,lon1){
    	var R = 6371; // km 
		//has a problem with the .toRad() method below.
		
    	var distances=[];
	    	for (i in sheetids){
	    		var lat2=sheetids[i][1];
	    		var lon2=sheetids[i][2];
	    		var x1 = lat2-lat1;
				//var dLat = x1.toRad();  
				var dLat = toRad(x1);  
				var x2 = lon2-lon1;
				var dLon = toRad(x2);  
				var a = Math.sin(dLat/2) * Math.sin(dLat/2) + 
				                Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * 
				                Math.sin(dLon/2) * Math.sin(dLon/2);  
				var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); 
				var d = R * c; 
				distances.push(d);
	    		
    	}
    	var minIndex=(indexOfMax(distances));
    	var filename=sheetids[minIndex][0];
		
		return filename;
    }
    

    show_map(sheetids);
    //var mapping={};

    //get sheet id from server
    /*
    function get_sheet_ids(){
    	var sheetids="";
		$.ajax({
              type : "POST",
              url : "/getAllSheet",
              success: function(response) {
                data=JSON.parse(response);
                //alert("");
                show_map(data);
            },
              error: function(error) {
                //alert('file not created');
                Notify("error","server error");
            }
  		});
	}

	function onClick(e) {
    	var ss=this.getLatLng();
    	$.ajax({
              type : "POST",
              url : "/download",
              //data: JSON.stringify({'gps':this.getLatLng()}),
              data:JSON.stringify(ss),
              contentType: 'application/json;',
              success: function(response) {
              	//alert(JSON.stringify(this.getLatLng));
              	//alert("downloading");
              	setTimeout("window.location.assign('" + response + "');", 1000);
                
            },
              error: function(error) {
            	Notify("error","server error");
            }
  		});
	}
    function show_map(sheetids){
    	//alert("33");
    	var planes = sheetids;

        var map = L.map('map').setView([planes[0][1],planes[0][2]], 8);
        mapLink = 
            '<a href="http://openstreetmap.org">OpenStreetMap</a>';
        L.tileLayer(
            'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; ' + mapLink + ' Contributors',
            maxZoom: 18,
            }).addTo(map);

		for (var i = 0; i < planes.length; i++) {
			marker = new L.marker([planes[i][1],planes[i][2]])
				.bindPopup(planes[i][0])
				.addTo(map).on('click', onClick);
		}

    }
    function download_the_file(name){
    	var name="./Book1.xlsx"
		setTimeout("window.location.assign('" + name + "');", 1000);

    }
    */
    //show_map();
    //get_sheet_ids();
    //download_the_file(id)
    
               
    </script>
</body>
</html>
